library(devtools)
use_package("magrittr")
use_package("magrittr")
use_package("magrittr")
detach("package:devtools", unload = TRUE)
devtools::use_package
library(devtools)
use_package(package = "magrittr")
use_package(package = "magrittr")
use_package(package = "dplyr")
use_package(package = "readr")
use_package(package = "tidyr")
use_package(package = "maps")
use_package(package = "graphics")
load_all("R/fars_functions.R")
load_all("R/fars_functions.R")
document()
test()
test()
use_testthat()
?fars_read
use_data("accident_2013.csv.bz2")
use_data("accident_2013.csv.bz2")
use_data_raw("accident_2013.csv.bz2")
fars_read <- function(filename) {
if(!file.exists(filename))
stop("file '", filename, "' does not exist")
data <- suppressMessages({
readr::read_csv(filename, progress = FALSE)
})
dplyr::tbl_df(data)
}
make_filename <- function(year) {
year <- as.integer(year)
sprintf("accident_%d.csv.bz2", year)
}
fars_read_years <- function(years) {
lapply(years, function(year) {
file <- make_filename(year)
tryCatch({
dat <- fars_read(file)
dplyr::mutate(dat, year = year) %>%
dplyr::select(MONTH, year)
}, error = function(e) {
warning("invalid year: ", year)
return(NULL)
})
})
}
fars_summarize_years <- function(years) {
dat_list <- fars_read_years(years)
dplyr::bind_rows(dat_list) %>%
dplyr::group_by(year, MONTH) %>%
dplyr::summarize(n = n()) %>%
tidyr::spread(year, n)
}
fars_map_state <- function(state.num, year) {
filename <- make_filename(year)
data <- fars_read(filename)
state.num <- as.integer(state.num)
if(!(state.num %in% unique(data$STATE)))
stop("invalid STATE number: ", state.num)
data.sub <- dplyr::filter(data, STATE == state.num)
if(nrow(data.sub) == 0L) {
message("no accidents to plot")
return(invisible(NULL))
}
is.na(data.sub$LONGITUD) <- data.sub$LONGITUD > 900
is.na(data.sub$LATITUDE) <- data.sub$LATITUDE > 90
with(data.sub, {
maps::map("state", ylim = range(LATITUDE, na.rm = TRUE),
xlim = range(LONGITUD, na.rm = TRUE))
graphics::points(LONGITUD, LATITUDE, pch = 46)
})
}
check()
document()
document()
document()
load_all("R/fars_functions.R")
D
document()
test_that("multiplication works", {
expect_error(fars_read("accident_2015.csv.bz2"), "file 'accident_2015.csv.bz2' does not exist")
})
test_that("filename returned is a string with the correct length", {
year <- 2014
expect_is(make_filename(year), "character")
expect_that(nchar(basename(make_filename(year))),
equals(nchar("accident_.csv.bz2") + nchar(year)))
})
test_that("filename returned is a string with the correct length", {
year <- 2013
expect_is(make_filename(year), "character")
expect_that(nchar(basename(make_filename(year))),
equals(nchar("accident_.csv.bz2") + nchar(year)))
})
use_testthat()
use_testthat()
test()
context("Testing FARS functions")
test_that("filename returned is a string with the correct length", {
year <- 2013
expect_is(make_filename(year), "character")
expect_that(nchar(basename(make_filename(year))),
equals(nchar("accident_.csv.bz2") + nchar(year)))
})
use_testthat()
use_test()
use_test()
use_test()
use_testthat()
?context
use_testthat()
test()
test()
use_vignette()
use_vignette("Introduction to fars")
use_vignette("Introduction_to_fars")
use_vignette("Introduction_to_fars")
check()
check()
check()
